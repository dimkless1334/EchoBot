from aiogram import Router, F
from aiogram.types import Message
from keyboards.inline import create_inline_keyboard, create_contacts_keyboard
from aiogram.types import CallbackQuery
from keyboards.reply import create_reply_keyboard

ADMINS = [1384014428]

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
user_router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@user_router.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —ç—Ö–æ-–±–æ—Ç. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –ø–æ–≤—Ç–æ—Ä—é.",
        reply_markup=create_reply_keyboard()
    )
    await message.answer(
        "–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=create_inline_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –û –±–æ—Ç–µ
@user_router.message(F.text == "–û –±–æ—Ç–µ")
async def cmd_help(message: Message):
    await message.answer(
        "–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é Python.\n"
        "–ë–æ—Ç –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ.\n"
        "–í –±–æ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã
@user_router.message(F.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def cmd_contacts(message: Message):
    await message.answer(
        "–ö–æ–Ω—Ç–∞–∫—Ç—ã:",
        reply_markup=create_contacts_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
@user_router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
async def cmd_info(message: Message):
    user = message.from_user
    reg_date = message.date.astimezone().strftime("%d.%m.%Y %H:%M")
    await message.answer(
        f"üë§ ID: <code>{user.id}</code>\n"
        f"üìõ –ò–º—è: {user.full_name}\n"
        f"üïí –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_date}",
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@user_router.message(F.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def cmd_stats(message: Message):
    if message.from_user.id in ADMINS:
        await message.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è!!!")
    else:
        await message.answer("–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
@user_router.callback_query(F.data == "delete")
async def delete_message(callback: CallbackQuery):
    await callback.message.delete()



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—ç—Ö–æ)
@user_router.message(F.text)
async def echo_message(message: Message):
    await message.answer(
        f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}",
        reply_markup=create_inline_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ç–æ
@user_router.message(F.photo)
async def echo_photo(message: Message):
    await message.answer_photo(
        message.photo[-1].file_id,
        caption=f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ!"
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–∏–¥–µ–æ
@user_router.message(F.video)
async def echo_video(message: Message):
    await message.answer_video(
        message.video.file_id,
        caption="–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∏–¥–µ–æ!"
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤
@user_router.message(F.document)
async def echo_document(message: Message):
    await message.answer_document(
        message.document.file_id,
        caption="–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–∞–π–ª!"
    )
